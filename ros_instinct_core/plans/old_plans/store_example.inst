// *** Instinct Robot Plan generated by dia/instinctgen.py ***
// *** 2020-04-27 13:33:57 /home/kieranwebber/catkin_ws/src/ros_instinct_core/plans/store_example.inst

// *** First, clear the old plan and initialise the buffers ***
PLAN R C
// AP=0, APE=0, C=0, CE=0, D=2, A=2
PLAN R I 0 0 0 0 2 2

// *** These are the Plan Elements. ***

// (NULL)
// Action: IncrementValue
// 	Parents: Count
//	Action=Increment
//	ActionValue=3
PLAN A A 1 1 3

// Template for Drives
// Drive: Count
// 	Children: IncrementValue
//	Priority=500
//	Interval=1
//	Sense=StoredValue3
//	Comparator=LT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=100
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
PLAN A D 2 1 500 1 3 3 100 0 0 0 0 0

// Template for Drives
// Drive: ResetToZero
// 	Children: TestAction
//	Priority=600
//	Interval=1
//	Sense=StoredValue3
//	Comparator=GT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=99
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
PLAN A D 3 4 600 1 3 2 99 0 0 0 0 0

// (NULL)
// Action: TestAction
// 	Parents: ResetToZero
//	Action=SetStoredValue3
//	ActionValue=0
PLAN A A 4 3 0

// *** Plan Element Names follow ... ***

// (NULL)
// Action: IncrementValue
PELEM IncrementValue=1

// Template for Drives
// Drive: Count
PELEM Count=2

// Template for Drives
// Drive: ResetToZero
PELEM ResetToZero=3

// (NULL)
// Action: TestAction
PELEM TestAction=4

// *** Plan output complete. RobotSenses and RobotActions follow ... ***

// Front right sensor - returns 0-4
// RobotSense: StoredValue3
//	SenseID=3
RSENSE StoredValue3=3

// Front right sensor - returns 0-4
// RobotSense: Fib1
//	SenseID=1
RSENSE Fib1=1

// Front right sensor - returns 0-4
// RobotSense: Fib2
//	SenseID=2
RSENSE Fib2=2

// Turn the specified angle in degrees
// RobotAction: SetStoredValue3
//	ActionID=3
RACTION SetStoredValue3=3

// Turn the specified angle in degrees
// RobotAction: LogSense
//	ActionID=4
RACTION LogSense=4

// Set the angular moment of the current movement
// RobotAction: Decrement
//	ActionID=0
RACTION Decrement=0

// Srt the robot speed in units per clock tick.
// RobotAction: Increment
//	ActionID=1
RACTION Increment=1

// *** Output completed. ***
