// *** Instinct Robot Plan generated by dia/instinctgen.py ***
// *** 2020-05-07 17:03:52 /home/kieranwebber/catkin_ws/src/ros_instinct_core/plans/planner_trial.inst

// *** First, clear the old plan and initialise the buffers ***
PLAN R C
// AP=1, APE=1, C=1, CE=2, D=3, A=4
PLAN R I 1 1 1 2 3 4

// *** These are the Plan Elements. ***

// Template for Drives
// Drive: AvoidCrash
// 	Children: ChangeDirection
//	Priority=500
//	Interval=1
//	Sense=MinFront
//	Comparator=LT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=45
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
PLAN A D 10 11 500 1 5 3 45 0 0 0 0 0

// Action: TurnAway
// 	Parents: CD1
//	Action=TurnTowardsOpen
//	ActionValue=45
PLAN A A 9 4 45

// Action: GoSlow
// 	Parents: CE1
//	Action=SetSpeed
//	ActionValue=8
PLAN A A 8 1 8

// Action: Stop
// 	Parents: AvoidBatteryRundown
//	Action=SetSpeed
//	ActionValue=0
PLAN A A 4 1 0

// Drive forward, avoiding objects as they are sensed
// Competence: ForwardAvoiding
// 	Parents: Explore
// 	Children: CE1, CE2
//	UseORWithinCEGroup=1
PLAN A C 2 1

// Template for Drives
// Drive: Explore
// 	Children: ForwardAvoiding
//	Priority=260
//	Interval=1
//	Sense=True
//	Comparator=TR	// EQ, NE, GT, LT, TR, FL
//	SenseValue=1
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
PLAN A D 1 2 260 1 0 4 1 0 0 0 0 0

// CompetenceElement: CE2
// 	Parents: ForwardAvoiding
// 	Children: GoFast
//	Priority=5
//	RetryLimit=0
//	Sense=MinFront
//	Comparator=GT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=69
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
PLAN A E 5 2 7 5 0 5 2 69 0 0

// CompetenceElement: CE1
// 	Parents: ForwardAvoiding
// 	Children: GoSlow
//	Priority=4
//	RetryLimit=0
//	Sense=MinFront
//	Comparator=LT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=70
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
PLAN A E 6 2 8 4 0 5 3 70 0 0

// Template for Drives
// Drive: AvoidBatteryRundown
// 	Children: Stop
//	Priority=1000
//	Interval=10
//	Sense=BatteryVoltage
//	Comparator=LT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=1000
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
PLAN A D 3 4 1000 10 10 3 1000 0 0 0 0 0

// ActionPattern: ChangeDirection
// 	Parents: AvoidCrash
// 	Children: CD1
PLAN A P 11

// Action: GoFast
// 	Parents: CE2
//	Action=SetSpeed
//	ActionValue=20
PLAN A A 7 1 20

// ActionPatternElement: CD1
// 	Parents: ChangeDirection
// 	Children: TurnAway
//	Order=1
PLAN A L 12 11 9 1

// *** Plan Element Names follow ... ***

// Template for Drives
// Drive: AvoidCrash
PELEM AvoidCrash=10

// Action: TurnAway
PELEM TurnAway=9

// Action: GoSlow
PELEM GoSlow=8

// Action: Stop
PELEM Stop=4

// Drive forward, avoiding objects as they are sensed
// Competence: ForwardAvoiding
PELEM ForwardAvoiding=2

// Template for Drives
// Drive: Explore
PELEM Explore=1

// CompetenceElement: CE2
PELEM CE2=5

// CompetenceElement: CE1
PELEM CE1=6

// Template for Drives
// Drive: AvoidBatteryRundown
PELEM AvoidBatteryRundown=3

// ActionPattern: ChangeDirection
PELEM ChangeDirection=11

// Action: GoFast
PELEM GoFast=7

// ActionPatternElement: CD1
PELEM CD1=12

// *** Plan output complete. RobotSenses and RobotActions follow ... ***

// Battery Volatage in mV
// RobotSense: BatteryVoltage
//	SenseID=10
RSENSE BatteryVoltage=10

// Minimu value from both front sensors
// RobotSense: ImuPitch
//	SenseID=8
RSENSE ImuPitch=8

// Battery current in mA
// RobotSense: BatteryCurrent
//	SenseID=11
RSENSE BatteryCurrent=11

// Minimu value from both front sensors
// RobotSense: MinBack
//	SenseID=6
RSENSE MinBack=6

// Front right sensor - returns 0-4
// RobotSense: BackRight
//	SenseID=4
RSENSE BackRight=4

// Front right sensor - returns 0-4
// RobotSense: BackLeft
//	SenseID=3
RSENSE BackLeft=3

// Minimu value from both front sensors
// RobotSense: MinFront
//	SenseID=5
RSENSE MinFront=5

// Front right sensor - returns 0-4
// RobotSense: FrontLeft
//	SenseID=1
RSENSE FrontLeft=1

// Minimu value from both front sensors
// RobotSense: ImuYaw
//	SenseID=9
RSENSE ImuYaw=9

// Front right sensor - returns 0-4
// RobotSense: FrontRight
//	SenseID=2
RSENSE FrontRight=2

// Front right sensor - returns 0-4
// RobotSense: True
//	SenseID=0
RSENSE True=0

// Minimu value from both front sensors
// RobotSense: ImuRoll
//	SenseID=7
RSENSE ImuRoll=7

// Srt the robot speed in units per clock tick.
// RobotAction: SetSpeed
//	ActionID=1
RACTION SetSpeed=1

// Set the angular moment of the current movement
// RobotAction: SetTurn
//	ActionID=2
RACTION SetTurn=2

// Turn the specified angle in degrees
// RobotAction: TurnAngle
//	ActionID=3
RACTION TurnAngle=3

// Turn the specified angle in degrees
// RobotAction: TurnTowardsOpen
//	ActionID=4
RACTION TurnTowardsOpen=4

// *** Output completed. ***
